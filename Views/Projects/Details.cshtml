@model CSBugTracker.Models.Project

@using CSBugTracker.Data;
@using CSBugTracker.Models.Enums;
@using CSBugTracker.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@inject UserManager<BTUser> _userManager
@inject ApplicationDbContext _context
@inject IBTFileService _fileService
@inject IBTRolesService _rolesService
@inject IBTProjectService _projectService
@inject IBTTicketHistoryService _historyService
@inject IBTTicketService _ticketService

@{
    ViewData["Title"] = "Details";
    string? userId = _userManager.GetUserId(User);
    BTUser? btUser = await _context.Users.FirstOrDefaultAsync(u => u.Id == userId);
}

<!-- start: page -->

<div class="row">
    <div class="col-lg-4 col-xl-3 mb-4 mb-xl-0">

        <section class="card">
            <div class="card-body">
                <div class="thumb-info mb-3">
                    <img src="@_fileService.ConvertByteArrayToFile(Model.ImageData!,Model.ImageType!,(int)DefaultImage.ProjectImage)" class="rounded img-fluid" alt="Project Image">
                    <div class="thumb-info-title">
                        <div class="thumb-info-inner">Priority</div>
                        <span class="thumb-info-type">@Model.ProjectPriority!.Name</span>
                    </div>
                </div>



                <div class="widget-toggle-expand mb-3">
                    <div class="widget-header">
                        <h5 class="mb-2 font-weight-semibold text-dark">Project Completion</h5>
                        <div class="widget-toggle">+</div>
                    </div>
                    <div class="widget-content-collapsed">
                        <div class="progress progress-xs light">
                            <div class="progress-bar" role="progressbar" aria-valuenow="60"
                                 aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                                60%
                            </div>
                        </div>
                    </div>
                    @if (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager)) && Model.Members.Contains(btUser!)))
                    {
                        <hr class="dotted short">

                        <div class="social-icons-list">
                            <a asp-action="Edit" asp-route-id="@Model.Id" data-bs-placement="bottom">
                                <i class="bx bx-pencil"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" data-bs-placement="bottom">
                                <i class="bx bx-trash"></i>
                            </a>
                            <a asp-action="AssignProjectMembers" asp-route-id="@Model.Id" data-bs-placement="bottom">
                                <i class="bx bxs-user-account"></i>
                            </a>
                            @if (User.IsInRole(nameof(BTRoles.Admin)))
                            {
                                <a asp-action="AssignPM" asp-route-id="@Model.Id" data-bs-placement="bottom">
                                    <i class="bx bxs-user-circle"></i>
                                </a>
                            }
                        </div>

                    }
                </div>

                <hr class="dotted short">

                <h5 class="mb-2 mt-3">Project Description</h5>
                <p class="text-2">
                    @Model.Description
                </p>
            </div>
        </section>

        <section class="card card-featured-left card-featured-tertiary mb-4">
            <div class="card-body">
                <div class="widget-profile-info">
                    <div class="profile-picture">
                        @{
                            BTUser? projectManager = await _projectService.GetProjectManagerAsync(Model.Id);
                            <img class="rounded-circle" src="@_fileService.ConvertByteArrayToFile(projectManager?.ImageData!,projectManager?.ImageType!,(int)DefaultImage.BTUserImage)" data-lock-picture="@_fileService.ConvertByteArrayToFile(projectManager?.ImageData!,projectManager?.ImageType!,(int)DefaultImage.BTUserImage)" />
                        }
                    </div>
                    <div class="profile-info">
                        <h4 class="name font-weight-semibold">@((await _projectService.GetProjectManagerAsync(Model.Id))?.FullName ?? "Unassigned")</h4>
                        <h5 class="role">Project Manager</h5>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <div class="col-lg-8 col-xl-6">

        <div class="tabs">
            <ul class="nav nav-tabs tabs-primary">
                <li class="nav-item active">
                    <button class="nav-link" data-bs-target="#overview" data-bs-toggle="tab">Ticket History</button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" data-bs-target="#edit" data-bs-toggle="tab">Project Members</button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" data-bs-target="#tickets" data-bs-toggle="tab">Active Tickets</button>
                </li>
            </ul>
            <div class="tab-content">
                <div id="overview" class="tab-pane active">

                    <div class="p-3">

                        <div class="timeline timeline-simple mt-3 mb-3">
                            <div class="scrollable colored-slider tm-body" data-plugin-scrollable
                                 style="height: 635px;">
                                <ol class="scrollable-content tm-items me-5">
                                    @foreach (TicketHistory history in await _historyService.GetProjectTicketHistoryAsync(Model.Id, Model.CompanyId))
                                    {
                                        <li>
                                            <div class="tm-box">
                                                <p class="text-muted mb-0">@history.Created</p>

                                                <p><strong>Property:</strong> @history.PropertyName</p>
                                                <p><strong>Old Value:</strong> @history.OldValue</p>
                                                <p><strong>New Value:</strong> @history.NewValue</p>
                                                <p class="mb-3">@history.Description</p>

                                            </div>
                                        </li>
                                        @*                                        <li>
                                    <div class="tm-box">
                                    <p class="text-muted mb-0">7 months ago.</p>
                                    <p>
                                    Checkout! How cool is that!
                                    </p>
                                    <div class="thumbnail-gallery">
                                    <a class="img-thumbnail lightbox"
                                    href="img/projects/project-4.jpg"
                                    data-plugin-options='{ "type":"image" }'>
                                    <img class="img-fluid" width="215"
                                    src="img/projects/project-4.jpg">
                                    <span class="zoom">
                                    <i class="bx bx-search"></i>
                                    </span>
                                    </a>
                                    </div>
                                    </div>
                                    </li>*@
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="edit" class="tab-pane">
                    <div class="scrollable colored-slider" data-plugin-scrollable style="height: 700px;">
                        <div class="scrollable-content col">
                            @foreach (BTUser member in Model.Members)
                            {
                                @if (!await _rolesService.IsUserInRoleAsync(member, nameof(BTRoles.ProjectManager)))
                                {
                                    <div class="card-body p-3 mb-3">
                                        <ul class="simple-user-list mb-3">
                                            <li class="widget-profile-info">
                                                <figure class="profile-picture">
                                                    <img class="rounded-circle" src="@_fileService.ConvertByteArrayToFile(member?.ImageData!,member?.ImageType!,(int)DefaultImage.BTUserImage)" data-lock-picture="@_fileService.ConvertByteArrayToFile(member?.ImageData!,member?.ImageType!,(int)DefaultImage.BTUserImage)" />
                                                </figure>
                                                <span class="title fs-6">@member?.FullName</span>
                                                @foreach (string role in await _rolesService.GetUserRolesAsync(member!))
                                                {
                                                    <h5 class="role">@role</h5>
                                                }
                                                <div class="border-bottom mb-1"></div>
                                                <div class="profile-footer">
                                                    @await _ticketService.GetTicketsDevelopingProjectAsync(member?.Id, Model.Id) Tickets Developing on Project, (@await _ticketService.GetTicketsDevelopingCompanyAsync(member?.Id, Model.Id)) in Company <br>
                                                    @await _ticketService.GetTicketsSubmittedProjectAsync(member?.Id, Model.Id) Tickets Submitted, (@await _ticketService.GetTicketsSubmittedCompanyAsync(member?.Id, Model.Id)) in Company
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div id="tickets" class="tab-pane">
                    <div class="row">
                        <div class="col">
                            <section class="card">
                                <header class="card-header">
                                    <div class="card-actions">
                                        <a href="#" class="card-action card-action-toggle"
                                           data-card-toggle></a>
                                        <a href="#" class="card-action card-action-dismiss"
                                           data-card-dismiss></a>
                                    </div>

                                    <h2 class="card-title">Rows with Details</h2>
                                </header>
                                <div class="card-body">
                                    <table class="table table-striped table-responsive-lg table-hover mb-0" id="datatable-tickets">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Description</th>
                                                <th>Created</th>
                                                <th>Updated</th>
                                                <th>Priority</th>
                                                <th>Type</th>
                                                <th>Status</th>
                                                <th>Developer</th>
                                                <th>Submitter</th>
                                                @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                                {
                                                    <th>Actions</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (Ticket ticket in Model.Tickets)
                                            {
                                                <tr class="p-2">
                                                    <td>
                                                        <a asp-action="Details" asp-route-id="@ticket.Id">@ticket.Title</a>
                                                    </td>
                                                    <td>@ticket.Description</td>
                                                    <td>@ticket.Created</td>
                                                    <td>@ticket.Updated</td>
                                                    <td>@ticket.TicketPriority!.Name</td>
                                                    <td>@ticket.TicketType!.Name</td>
                                                    <td>@ticket.TicketStatus!.Name</td>
                                                    @if (ticket.DeveloperUserId == null && (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager)) && ticket.Project!.Members.Contains(btUser!))))
                                                    {
                                                        <td class="actions-hover actions-fade">
                                                            <a asp-action="AssignDev" asp-route-id="@ticket.Id">Assign Dev <i class="fas fa-code"></i></a>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>@ticket.DeveloperUser?.FullName</td>
                                                    }
                                                    <td>@ticket.SubmitterUser!.FullName</td>
                                                    <td class="actions-hover actions-fade">
                                                        @if (User.IsInRole(nameof(BTRoles.Admin)) || (User.IsInRole(nameof(BTRoles.ProjectManager)) && ticket.Project!.Members.Contains(btUser!)))
                                                        {
                                                            <a asp-action="Edit" asp-route-id="@ticket.Id"><i class="fas fa-pencil-alt"></i></a>
                                                            <a asp-action="Delete" asp-route-id="@ticket.Id" class="delete-row"><i class="far fa-trash-alt"></i></a>
                                                            <a asp-action="AssignDev" asp-route-id="@ticket.Id"><i class="fas fa-code"></i></a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3">

        <h4 class="mb-3 mt-0 font-weight-semibold text-dark">Project Stats</h4>
        <section class="card card-transparent">

            <div class="card-body">
                <section class="card card-featured-left card-featured-primary mb-4">
                    <div class="card-body">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon bg-primary">
                                    <i class="fas fa-life-ring"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">Time Left on Project</h4>
                                    <div class="info">
                                        <strong class="amount">1281</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section class="card mb-4">
                    <div class="card-body bg-tertiary">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fas fa-tag"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">Resolved Tickets</h4>
                                    <div class="info">
                                        <strong class="amount">@await _projectService.GetResolvedProjectTicketCountAsync(Model.Id, Model.CompanyId)</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section class="card mb-4">
                    <div class="card-body bg-primary">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fas fa-tag"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">Development Tickets</h4>
                                    <div class="info">
                                        <strong class="amount">@await _projectService.GetDevelopmentProjectTicketCountAsync(Model.Id, Model.CompanyId)</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section class="card mb-4">
                    <div class="card-body bg-secondary">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fas fa-tag"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">Unassigned Tickets</h4>
                                    <div class="info">
                                        <strong class="amount">@await _projectService.GetUnassignedProjectTicketCountAsync(Model.Id, Model.CompanyId)</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

                <section class="card card-featured-left card-featured-primary mb-4">
                    <div class="card-body">
                        <div class="widget-summary">
                            <div class="widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon bg-primary">
                                    <i class="fas fa-tag"></i>
                                </div>
                            </div>
                            <div class="widget-summary-col">
                                <div class="summary">
                                    <h4 class="title">Archived Tickets</h4>
                                    <div class="info">
                                        <strong class="amount">@await _projectService.GetArchivedProjectTicketCountAsync(Model.Id, Model.CompanyId)</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </section>

    </div>

</div>
<!-- end: page -->
@section Scripts
    {
    <script>
        //$('#datatable-tickets').DataTable();
        (function ($) {

            'use strict';

            var datatableInit = function () {
                var $table = $('#datatable-tickets');

                // format function for row details
                var fnFormatDetails = function (datatable, tr) {
                    var data = datatable.fnGetData(tr);

                    return [
                        '<table class="table table-striped mb-0">',
                        '<tr class="b-top-0">',
                        '<td><label class="mb-0">Rendering engine:</label></td>',
                        '<td>' + data[1] + ' ' + data[4] + '</td>',
                        '</tr>',
                        '<tr>',
                        '<td><label class="mb-0">Link to source:</label></td>',
                        '<td>Could provide a link here</td>',
                        '</tr>',
                        '<tr>',
                        '<td><label class="mb-0">Extra info:</label></td>',
                        '<td>And any further details here (images etc)</td>',
                        '</tr>',
                        '</table>'
                    ].join('');
                };

                // insert the expand/collapse column
                var th = document.createElement('th');
                var td = document.createElement('td');
                td.innerHTML = '<i data-toggle class="far fa-plus-square text-primary h5 m-0" style="cursor: pointer;"></i>';
                td.className = "text-center";

                $table
                    .find('thead tr').each(function () {
                        this.insertBefore(th, this.childNodes[0]);
                    });

                $table
                    .find('tbody tr').each(function () {
                        this.insertBefore(td.cloneNode(true), this.childNodes[0]);
                    });

                // initialize
                var datatable = $table.dataTable({
                    dom: '<"row"<"col-lg-6"l><"col-lg-6"f>><"table-responsive"t>p',
                    aoColumnDefs: [{
                        bSortable: false,
                        aTargets: [0]
                    }],
                    aaSorting: [
                        [1, 'asc']
                    ]
                });

                // add a listener
                $table.on('click', 'i[data-toggle]', function () {
                    var $this = $(this),
                        tr = $(this).closest('tr').get(0);

                    if (datatable.fnIsOpen(tr)) {
                        $this.removeClass('fa-minus-square').addClass('fa-plus-square');
                        datatable.fnClose(tr);
                    } else {
                        $this.removeClass('fa-plus-square').addClass('fa-minus-square');
                        datatable.fnOpen(tr, fnFormatDetails(datatable, tr), 'details');
                    }
                });
            };

            $(function () {
                datatableInit();
            });

        }).apply(this, [jQuery]);
    </script>
}