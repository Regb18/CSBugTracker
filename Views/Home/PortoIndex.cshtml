@model CSBugTracker.Models.Company

@using CSBugTracker.Data;
@using CSBugTracker.Models.Enums;
@using CSBugTracker.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@inject IBTFileService _fileService
@inject IBTRolesService _rolesService
@inject IBTTicketHistoryService _historyService
@inject IBTTicketService _ticketService
@inject IBTCompanyService _companyService
@inject UserManager<BTUser> _userManager
@inject ApplicationDbContext _context

@{
    string? userId = _userManager.GetUserId(User);
    BTUser? btUser = await _context.Users.Include(u => u.Company).FirstOrDefaultAsync(u => u.Id == userId);
}

<!-- start: page -->
<div class="row">
    <div class="col-lg-6 mb-3">
        <section class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        <!-- Morris: Donut -->
                        <div class="chart chart-md" id="morrisDonut"></div>
                        @*<canvas id="morrisDonut" height=""></canvas>*@
                        <script type="text/javascript">
                            var morrisDonutData = [{
                                label: "My Projects",
                                value: @await _companyService.GetUserProjectsCount(userId)
                            }, {
                                label: "My Tickets",
                                value: @await _companyService.GetUserTicketsCount(userId)
                            }, {
                                label: "My Notifications",
                                value: @await _companyService.GetUserNotificationsCount(userId)
                            }];
                            // See: js/examples/examples.charts.js for more settings.
                        </script>
                    </div>
                    <div class="col-6">
                        <h3>My Notifications</h3>
                        <div class="timeline timeline-simple mt-3 mb-3">
                            <div class="scrollable colored-slider tm-body" data-plugin-scrollable style="height: 292px;">
                                <ol class="scrollable-content tm-items me-3">
                                    @foreach (Notification notification in await _companyService.GetUserNotifications(userId))
                                    {
                                        <li>
                                            <div class="tm-box">
                                                <h5><strong>Sender:</strong> @notification.Sender!.FullName</h5>
                                                <p>
                                                    <strong>Title:</strong> @notification.Title <br>
                                                    <strong>Message:</strong> @notification.Message
                                                </p>     

                                            </div>
                                        </li>
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </section>
    </div>
    <div class="col-xl-6">
        <section class="card">
            <div class="scrollable card-body" data-plugin-scrollable style="height: 402px;">
                <div class="scrollable-content p-2">
                    <table class="table table-responsive-md table-striped mb-0 me-2">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Project</th>
                                <th>Priority</th>
                                <th>Progress</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int num = 0;
                            }
                            @foreach (Project project in Model.Projects)
                            {
                                {
                                    num++;
                                }
                                <tr>
                                    <td>@num</td>
                                    <td>@project.Name</td>
                                    <td><span class="badge badge-default">@project.ProjectPriority!.Name</span></td>
                                    <td>

                                        @* Razor code block *@
                                        @{
                                            var start = project.StartDate!.Value!;
                                            var end = project.EndDate!.Value!;
                                            var today = DateTime.Now;
                                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                        }
                                        <div class="progress progress-sm progress-half-rounded m-0 mt-1 light">
                                            <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                                @percent%
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row pt-4 mt-2">
    <div class="col-lg-6 col-xl-3">
        <section class="card card-transparent">
            <header class="card-header">

                <h2 class="card-title">Company Members</h2>
            </header>
            <div class="scrollable colored-slider" data-plugin-scrollable style="height: 620px;">
                <div class="scrollable-content col">
                    @foreach (BTUser admin in Model.Members)
                    {
                        @if (await _rolesService.IsUserInRoleAsync(admin, nameof(BTRoles.Admin)))
                        {
                            <div class="card-body bg-primary w-100 mb-2">
                                <div class="widget-profile-info">
                                    <div class="profile-picture">
                                        <img class="rounded-circle" src="@_fileService.ConvertByteArrayToFile(admin?.ImageData!,admin?.ImageType!,(int)DefaultImage.BTUserImage)" data-lock-picture="@_fileService.ConvertByteArrayToFile(admin?.ImageData!,admin?.ImageType!,(int)DefaultImage.BTUserImage)" />
                                    </div>
                                    <div class="profile-info">
                                        <h4 class="name font-weight-semibold">@admin!.FullName</h4>
                                        <h5 class="role">Administrator</h5>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    @foreach (BTUser member in Model.Members)
                    {
                        @if (!await _rolesService.IsUserInRoleAsync(member, nameof(BTRoles.Admin)))
                        {
                            <div class="card-body mb-2">
                                <ul class="simple-user-list">
                                    <li class="widget-profile-info">
                                        <figure class="profile-picture">
                                            <img class="rounded-circle" src="@_fileService.ConvertByteArrayToFile(member?.ImageData!,member?.ImageType!,(int)DefaultImage.BTUserImage)" data-lock-picture="@_fileService.ConvertByteArrayToFile(member?.ImageData!,member?.ImageType!,(int)DefaultImage.BTUserImage)" />
                                        </figure>
                                        <span class="title fs-6">@member?.FullName</span>
                                        @foreach (string role in await _rolesService.GetUserRolesAsync(member!))
                                        {
                                            <h5 class="role">@role</h5>
                                        }
                                        <div class="border-bottom mb-1"></div>
                                        <div class="profile-footer">
                                            @await _ticketService.GetTicketsDevelopingCompanyAsync(member?.Id, Model.Id) Tickets Developing<br>
                                            @await _ticketService.GetTicketsSubmittedCompanyAsync(member?.Id, Model.Id) Tickets Submitted
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        }
                    }

                </div>
            </div>
        </section>
    </div>
    <div class="col-lg-6 col-xl-3">
        <section class="card card-transparent">
            <header class="card-header">

                <h2 class="card-title">Company Stats</h2>
            </header>
            <div class="card-body">
                <section class="card">
                    <div class="card-body">
                        <span>
                            <div class="float-end widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fs-1 fas fa-users text-light"></i>
                                </div>
                            </div>
                            <div class="h4 font-weight-bold mb-0">@Model.Members.Count</div>
                        </span>
                        <p class="text-3 text-light mb-0">Members</p>
                    </div>
                </section>
                <section class="card">
                    <div class="card-body">
                        <span>
                            <div class="me-2 float-end widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fs-1 fas fa-clipboard-list text-info"></i>
                                </div>
                            </div>
                            <div class="h4 font-weight-bold mb-0">@await _companyService.GetCompanyProjectCountAsync(Model.Id)</div>
                        </span>
                        <p class="text-3 text-light mb-0">Active Projects</p>
                    </div>
                </section>
                <section class="card">
                    <div class="card-body">
                        <span>
                            <div class="float-end widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fs-1 fas fa-tag text-primary"></i>
                                </div>
                            </div>
                            <div class="h4 font-weight-bold mb-0">@await _companyService.GetCompanyTicketCountAsync(Model.Id)</div>
                        </span>
                        <p class="text-3 text-light mb-0">Active Tickets</p>
                    </div>
                </section>
                <section class="card">
                    <div class="card-body">
                        <span>
                            <div class="float-end widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fs-1 fas fa-tag text-success"></i>
                                </div>
                            </div>
                            <div class="h4 font-weight-bold mb-0">@await _companyService.GetResolvedTicketCountAsync(Model.Id)</div>
                        </span>
                        <p class="text-3 text-light mb-0">Resolved Tickets</p>
                    </div>
                </section>
                <section class="card">
                    <div class="card-body">
                        <span>
                            <div class="float-end widget-summary-col widget-summary-col-icon">
                                <div class="summary-icon">
                                    <i class="fs-1 fas fa-tag"></i>
                                </div>
                            </div>
                            <div class="h4 font-weight-bold mb-0">@await _companyService.GetArchivedTicketCountAsync(Model.Id)</div>
                        </span>
                        <p class="text-3 text-light mb-0">Archived Tickets</p>
                    </div>
                </section>
            </div>
        </section>
    </div>
    <div class="col-lg-12 col-xl-6">
        <section class="card">
            <header class="card-header card-header-transparent">

                <h2 class="card-title">Company Activity</h2>
            </header>
            <div class="card-body">
                <div class="timeline timeline-simple mt-3 mb-3">
                    <div class="scrollable colored-slider tm-body" data-plugin-scrollable style="height: 555px;">
                        <ol class="scrollable-content tm-items me-3">
                            @foreach (TicketHistory history in await _historyService.GetCompanyTicketHistoryAsync(Model.Id))
                            {
                                <li>
                                    <div class="tm-box">
                                        <p class="text-muted mb-0">@history.Created</p>
                                        @if (history.Description == "New Ticket Created")
                                        {
                                            <p class="mb-3">
                                                @history.Description<br>
                                                <strong>Ticket:</strong> @history.Ticket?.Title
                                            </p>
                                        }
                                        else
                                        {
                                            <p>
                                                <strong>Ticket:</strong> @history.Ticket?.Title<br>
                                                <strong>Property:</strong> @history.PropertyName<br>
                                                <strong>Description:</strong> @history.Description
                                            </p>
                                        }

                                    </div>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<!-- end: page -->
@section Scripts{
    <script>
        if ($('#morrisDonut').get(0)) {
            Morris.Donut({
                resize: true,
                element: 'morrisDonut',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159'],
                borderColor: ['#2E353E']
            });
        }
    </script>
}