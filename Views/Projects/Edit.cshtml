@model CSBugTracker.Models.Project

@using CSBugTracker.Models.Enums;
@using CSBugTracker.Services.Interfaces;

@inject IBTFileService _FileService

@{
    ViewData["Title"] = "Edit";
}

<!-- start: page -->
<form class="ecommerce-form action-buttons-fixed" asp-action="Edit" method="post" enctype="multipart/form-data">
	<input type="hidden" asp-for="Id" />
	<input type="hidden" asp-for="Created" />
	<input type="hidden" asp-for="CompanyId" />
	<input type="hidden" asp-for="ImageData" />
	<input type="hidden" asp-for="ImageType" />
	<input type="hidden" asp-for="Archived" />
	<div class="row mt-2 mb-5">
		<div class="col">
			<section class="card card-modern card-big-info mt-3">
				<div class="card-body border border-info">
					<div class="row">
						<div class="border-end border-info col-lg-2-5 col-xl-1-5">
							<i class="card-big-info-icon bx bx-camera"></i>
							<h2 class="card-big-info-title">Project Image</h2>
							<p class="card-big-info-desc">Upload your project image</p>
						</div>
						<div class="col-lg-3-5 col-xl-4-5">
							<div class="form-group row align-items-center">
								<div class="col">
									<div id="dropzone-form-image" class="dropzone-modern dz-square">
										<span class="dropzone-upload-message text-center">
											<i class="bx bxs-cloud-upload"></i>
											<b class="text-color-primary">Drag/Upload</b> your image here.
										</span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</section>
		</div>
	</div>
	<div class="row mb-3">
		<div class="col">
			<section class="card card-modern card-big-info">
				<div class="card-body border border-info">
					<div class="row">
						<div class="border-end border-info col-lg-2-5 col-xl-1-5">
							<i class="card-big-info-icon bx bx-slider"></i>
							<h2 class="card-big-info-title">Project Details</h2>
							<p class="card-big-info-desc">Add here the category description with all details and necessary information.</p>
						</div>
						<div class="col-lg-3-5 col-xl-4-5">
							<div class="form-group row align-items-center mb-3">
								<label asp-for="Name" class="col-lg-5 col-xl-3 control-label text-lg-end mb-0">Project Name</label>
								<div class="col-lg-7 col-xl-6">
									<input type="text" class="form-control form-control-modern" asp-for="Name" />
								</div>
							</div>
							<div class="form-group row align-items-center mb-3">
								<label asp-for="Description" class="col-lg-5 col-xl-3 control-label text-lg-end pt-2 mt-1 mb-0">Project Description</label>
								<div class="col-lg-7 col-xl-6">
									<textarea class="form-control form-control-modern" asp-for="Description" rows="6"></textarea>
								</div>
							</div>
							<div class="form-group row align-items-center mb-3">
								<label asp-for="StartDate" class="col-lg-5 col-xl-3 control-label text-lg-end mb-0"></label>
								<div class="col-lg-7 col-xl-6">
									<input class="form-control form-control-modern" asp-for="StartDate" />
								</div>
							</div>
							<div class="form-group align-items-center row">
								<label asp-for="EndDate" class="col-lg-5 col-xl-3 control-label text-lg-end mb-0"></label>
								<div class="col-lg-7 col-xl-6">
									<input class="form-control form-control-modern" asp-for="EndDate" />
								</div>
							</div>
							<div class="form-group align-items-center row">
								<label asp-for="ProjectPriorityId" class="col-lg-5 col-xl-3 control-label text-lg-end mb-0"></label>
								<div class="col-lg-7 col-xl-6">
									<select asp-for="ProjectPriorityId" class="form-control form-control-modern" asp-items="ViewBag.ProjectPriorityId"></select>
								</div>
							</div>
@*							<div class="form-group row">
								<label asp-for="Members" class="col-lg-5 col-xl-3 control-label text-lg-end mb-0"></label>
								<div class="col-lg-7 col-xl-6">
									<select name="Selected" class="form-control form-control-modern" asp-items="ViewBag.Members" multiple></select>
								</div>
							</div>*@
						</div>
					</div>
				</div>
			</section>
		</div>
	</div>
	<div class="row action-buttons --reg-card-bg-dark">
		<div class="col-12 col-md-auto">
			<button type="submit" class="submit-button btn btn-primary btn-px-4 py-3 d-flex align-items-center font-weight-semibold line-height-1" data-loading-text="Loading...">
				<i class="bx bx-save text-4 me-2"></i> Save Changes
			</button>
		</div>
		<div class="col-12 col-md-auto px-md-0 mt-3 mt-md-0">
			<a asp-action="Index" class="cancel-button btn btn-light btn-px-4 py-3 border font-weight-semibold text-color-dark text-3">Cancel</a>
		</div>
		@*		<div class="col-12 col-md-auto ms-md-auto mt-3 mt-md-0 ms-auto">
		<a href="#" class="delete-button btn btn-danger btn-px-4 py-3 d-flex align-items-center font-weight-semibold line-height-1">
		<i class="bx bx-trash text-4 me-2"></i> Delete Category
		</a>
		</div>*@
	</div>
</form>
<!-- end: page -->


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		(function ($) {

			'use strict';

			/*
			 * Form Image - Dropzone
			 * "upload.php" is not included with the template. You should create your own server side file to upload the files.
			 * See https://www.dropzonejs.com/#server-side-implementation for more information
			 *
			 */
			var initializeDropzone = function () {
				$('#dropzone-form-image').dropzone({
					url: '/upload.php',
					addRemoveLinks: true,
					init: function () {
						if ($('#dropzone-form-image').hasClass('dz-filled')) {
							var dropzoneObj = Dropzone.forElement("#dropzone-form-image"),
								mockFile = { name: "Image Name", size: 12345 };

							dropzoneObj.displayExistingFile(mockFile, 'img/products/product-1.jpg');
						}
					}
				}).addClass('dropzone initialized');
			}

			// First Load
			$(document).ready(function () {
				if ($('#dropzone-form-image').get(0)) {
					initializeDropzone();
				}
			});

			// Sidebar Overlay Form Show
			$(window).on('ecommerce.sidebar.overlay.show', function () {
				if ($('#dropzone-form-image').get(0)) {
					initializeDropzone();
				}
			});

			/*
			 * eCommerce Attribues - Add New
			 *
			 */
			$(document).on('click', '.ecommerce-attribute-add-new', function (e) {
				e.preventDefault();

				var html = '' +
					'<div class="form-group row justify-content-center ecommerce-attribute-row">' +
					'<div class="col-xl-3">' +
					'<label class="control-label">Name</label>' +
					'<input type="text" class="form-control form-control-modern" name="attName" value="" />' +
					'<div class="checkbox mt-3 mb-3 mb-lg-0">' +
					'<label class="my-2">' +
					'<input type="checkbox" name="attVisible" value="">' +
					'Visible on the item page' +
					'</label>' +
					'</div>' +
					'</div>' +
					'<div class="col-xl-6">' +
					'<a href="#" class="ecommerce-attribute-remove text-color-danger float-end">Remove</a>' +
					'<label class="control-label">Value(s)</label>' +
					'<textarea class="form-control form-control-modern" name="attValue" rows="4" placeholder="Enter some text, or some attributes by | separating values"></textarea>' +
					'</div>' +
					'</div>' +
					'';

				$('.ecommerce-attributes-wrapper').append(html);
			});

			/*
			 * eCommerce Attribues - Remove
			 *
			 */
			$(document).on('click', '.ecommerce-attribute-remove', function (e) {
				e.preventDefault();

				$(this).closest('.ecommerce-attribute-row').remove();
			});

			/*
			 * eCommerce Form - Validation and Submit the form data
			 *
			 */
			var ecommerceFormValidate = function () {
				var $form = $('.ecommerce-form');

				$form.validate({
					ignore: '',
					invalidHandler: function (form, validator) {
						var errors = validator.numberOfInvalids();

						if (errors) {
							$('.form-control.error').each(function () {
								var tab_id = $(this).closest('.tab-pane').attr('id');

								$('.nav-link[href="#' + tab_id + '"]').trigger('click');
								return false;
							});
						}
					},
					submitHandler: function (form) {

						// Fields Data
						var formData = $form.serializeArray(),
							formFieldsData = {};

						$(formData).each(function (index, obj) {
							if (obj.name != 'attName' && obj.name != 'attVisible' && obj.name != 'attValue') {
								formFieldsData[obj.name] = obj.value;
							}
						});

						// Mount Attributes
						var attsArray = [];

						$('.ecommerce-attribute-row').each(function () {
							var $row = $(this);

							attsArray.push({
								attName: $row.find('input[name="attName"]').val(),
								attVisible: $row.find('input[name="attVisible"]').is(':checked') ? true : false,
								attValue: $row.find('textarea[name="attValue"]').val()
							});
						});

						// Add "atts" param with attributes array to formFieldsData object
						if (attsArray.length > 0) {
							formFieldsData.atts = attsArray;
						}

						// Form Images - Dropzone
						if ($('#dropzone-form-image').get(0)) {
							var dropzoneObj = Dropzone.forElement("#dropzone-form-image");
							if (typeof dropzoneObj != 'undefined' && dropzoneObj.files.length > 0) {
								var imagesArr = [];

								for (var i = 0; i < dropzoneObj.files.length; i++) {
									imagesArr.push({
										dataURL: dropzoneObj.files[i].dataURL,
										upload: dropzoneObj.files[i].upload
									});
								}

								formFieldsData.images = imagesArr;
							}
						}

						// Submit Button
						var $submitButton = $('.submit-button'),
							submitText = $submitButton.html();

						$submitButton.html('<i class="bx bx-save text-4 mr-2"></i>' + $submitButton.data('loading-text'));

						// Important: "register.php" is not included with the template. We add this just for example purpose.
						// You should create your own server side code to connect with a database and register the data.
						$.ajax({
							url: '/path/to/register.php',
							type: 'post',
							data: formFieldsData,
						})
							.done(function () {
								new PNotify({
									title: 'Success',
									text: 'You completed the registration form.',
									type: 'success',
									addclass: 'notification-success',
									icon: 'fas fa-check'
								});

								$('.action-buttons').remove();

								if ($form.closest('.ecommerce-form-sidebar-overlay-wrapper').get(0)) {
									$('.ecommerce-form-sidebar-overlay-wrapper').removeClass('show');
								} else {
									setTimeout(function () {
										location.reload();
									}, 5000);
								}
							})
							.fail(function () {
								$submitButton.html(submitText);

								new PNotify({
									title: 'Error',
									text: 'Unfortunately an error occurred, please try again or contact the website administrator.',
									type: 'error',
									addclass: 'notification-error',
									icon: 'fas fa-times'
								});

							});
					}
				});
			}

			// First Load
			ecommerceFormValidate();

			// Sidebar Overlay Form Show
			$(window).on('ecommerce.sidebar.overlay.show', function () {
				ecommerceFormValidate();
			});


		}(jQuery));
	</script>
}